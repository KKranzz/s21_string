#include "../s21_string.h"
#include <string.h>
#test strncpy_1
  char s1[20] = "Hello, world!";
  char s2[20] = "Hello, world!";
  char s3[] = "Cool day";
  s21_size_t n = 5;
  ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
#test strncpy_2
  char s1[20] = "Hello, world!";
  char s2[20] = "Hello, world!";
  char s3[] = "\0";
  s21_size_t n = 1;
  ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
#test strncpy_3
  char s1[30] = "Hello, world!";
  char s2[30] = "Hello, world!";
  char s3[] = "maf-maf-gav";
  s21_size_t n = 1;
  ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
#test strncpy_4
  char s1[5] = "";
  char s2[5] = "";
  char s3[] = "";
  s21_size_t n = 0;
  ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
#test strncpy_5
  char s1[70] = "";
  char s2[70] = "";
  char s3[] = "I love my life where I sleep HEHEHEHEHE";
  s21_size_t n = strlen(s3);
  ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
#test strncpy_6
  char s1[5] = "";
  char s2[5] = "";
  char s3[] = "\0";
  s21_size_t n = 1;
  ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
#test strncpy_7
    char *s1 = (char*)malloc(20 * sizeof(char));
    char *s2 = (char*)malloc(20 * sizeof(char));
    char s3[] = "Copy this!";
    s21_size_t n = 9;
    if (s1 != NULL && s2 != NULL) {
        strcpy(s1, "Original text");
        strcpy(s2, "Original text");
        ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
        free(s1);
        free(s2);
    }
#test strncpy_8
    char* s1 = (char*)malloc(sizeof(char) * 15);
    char* s2 = (char*)malloc(sizeof(char) * 15);
    char* s3 = (char*)malloc(sizeof(char) * 10);
    s21_size_t n = 5;

    if (s1 != NULL && s2 != NULL && s3 != NULL) {
        strcpy(s1, "initial_string");
        strcpy(s2, "initial_string");
        strcpy(s3, "copy_me");

        ck_assert_pstr_eq(strncpy(s1, s3, n), s21_strncpy(s2, s3, n));
        free(s1);
        free(s2);
        free(s3);
    }